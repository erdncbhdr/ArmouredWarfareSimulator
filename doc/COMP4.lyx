#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
theorems-bytype
theorems-sec-bytype
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
COMP4
\end_layout

\begin_layout Title
Armoured Warfare Simulator 2D 2014
\end_layout

\begin_layout Author
Harry Ward
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Analysis
\end_layout

\begin_layout Subsection
Introduction
\end_layout

\begin_layout Standard
In 2013, a study by The NPD group showed that 68% of all PC owners used
 their computer for online gaming 
\begin_inset CommandInset citation
LatexCommand cite
key "key-1"

\end_inset

, making it the largest user base in the PC market.
 The problem comes with the fact that high-powered gaming machines are costly,
 and most users cannot play triple-A, high-fidelity releases on their home
 PC.
 This fact means that popular multiplayer games often leave some players
 unable to join in.
 
\end_layout

\begin_layout Standard
My client is Slick Muffin Studios
\begin_inset CommandInset citation
LatexCommand cite
key "key-2"

\end_inset

, a small game developer who specialise in creating 2D games.
 I have worked with the client in the past, making small scale games.
 They have approached me to produce a multiplayer game in their style that
 can run on all machines made in the last 10 years in order to answer a
 growing request from the userbase for a game they can play with friends.
 My point of contact to the company is the creative director Jessie Canfer
 who has been with the company since it's founding in 2012.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
My user group includes those who cannot play the full release of a game
 due to the machine specifications required to run it at a reasonable frame
 per second count.
 These potential consumers vary greatly in technical knowledge, from expert
 to beginner, although all know how to use a basic program.
\end_layout

\begin_layout Standard
In short, my aim is to produce a well-optimised 2D multiplayer game able
 to run on most systems.
\end_layout

\begin_layout Subsection
Investigation of User Needs and Acceptable Limitations
\end_layout

\begin_layout Subsubsection
The Current System Analysis
\end_layout

\begin_layout Standard
The problem that I am solving is that there is no current system- the user
 cannot play multiplayer games on their PC at a reasonable FPS.
 As such there is no current system to analyse.
\end_layout

\begin_layout Subsubsection
Questionnaire
\end_layout

\begin_layout Standard
I asked various PC owners about their computer usage and specifications
 of their machines.
 This will help me set my limitations.
 Due to my user group, some may have lower specification PCs than others;
 In order to provide to all users, I will need to establish to lowest specificat
ion.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Question
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User 4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User 5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Do you own a PC?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Do you play online games?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Do you have a dedicated graphics card?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Can you play new releases?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
N/A
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes(barely)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Yes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Are graphics important to you?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
What operating system do you use?
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GNU/Linux
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Win8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Win7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Win8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
WinVista
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
From this I have found out that graphics are not an issue in the games my
 users play, I expected this as the users want to play the games and cannot
 normally, as shown by the fact that 3/4 users have trouble playing new
 releases.
 I have also found that my system will have to be compatable with windows
 versions Vista onwards, as everyone interviewed uses windows, as well as
 other major operating systems including GNU/Linux.
 
\end_layout

\begin_layout Subsubsection
The Proposed New System Analysis
\end_layout

\begin_layout Standard
I will interview a potential user of my solution, from it I hope to figure
 out what the average user enjoys and wants from a multiplayer game.
 I also hope to find out what style of game is enjoyable on low-end computers,
 to give me direction designing my solution.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Interview with Fuego Gitano, low-end PC user
\end_layout

\begin_layout Standard
Q: What is most important to you in a multiplayer game?
\end_layout

\begin_layout Standard
A: I want fun mechanics with a small-ish team size, also a reliable connection
 - it's not fun having lots of lag.
 There should be end-game content to keep players interested as well.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Q: End-game content? What do you mean?
\end_layout

\begin_layout Standard
A: I rather like progression, working up to gradually better things, but
 once you reach the top there is nothing else to do.
 More content when you reach this end keeps me interested and playing.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Q: What graphics do you expect from a multiplayer game?
\end_layout

\begin_layout Standard
A: From my machine, I expect at least a detailed or stylised 2d environment,
 3d isn't always reliable as my FPS can drop quite a bit.
 Other than that, a simple style works quite well.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Q:
\emph on
 
\emph default
What genres of game do you think work well for multiplayer?
\end_layout

\begin_layout Standard
A: I enjoy shooters and games involving individual skill.
 I also like fast-paced gameplay.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Q: Do you like luck being a mechanic of the game?
\end_layout

\begin_layout Standard
A: No, that ruins it for me.
 I like predictable gameplay .
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Q: Is there anything else you enjoy in multiplayer games?
\end_layout

\begin_layout Standard
A: I enjoy an element of customisation, visual mainly.
 Strategy is also fun, quick decisions leading to either victory or defeat
 can be really good.
 Also winning should be secondary to having fun, and the game should allow
 for this by not focusing too much on victory.
 That is everything, I think.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
From this interview I have found that my typical user puts empasis on mechanics
 over graphics, which I expected as my user group does not have dedicated
 graphics cards, so have come to appreciate good mechanics.
 The user also wants there to be reason to carry on playing, to progress
 and to have something to work towards, this works nicely as the user enjoys
 shooters and progression is a mainstay in this genre.
 This combined with the user wanting a strategic game leads me to propose
 a top-down 2D armoured warfare game.
 It's will comprise of small-sized teams of perhaps 4 and an element of
 customisation as per the user's answers from the interview.
\end_layout

\begin_layout Section*
Level 0 Data Flow Diagram
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Level0Data.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Section*
Level 1 Data Flow Diagram
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Level1Data.pdf
	scale 50

\end_inset


\end_layout

\begin_layout Standard
There is only one entity in my data flow diagram, as information is both
 taken from and given to the client.
 There are to be multiple clients entities connected to the server at one
 point, up to 8.
 The server will act as a data source, holding data for all connected clients
 and sending it to them on request.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Data will be stored on the server for user accounts, this will be a <10MiB
 database, and on the client side player sprites will be stored in PNG format
 for transparency, whilst the maps will likely be stored in JPG format along
 with a text file to store map collision data, i.e.
 where building are.
 These sprites could take up between 10 and 20 MiB of data, and the client/serve
r collection will be under 30MiB.
 It will be able to be stored on any medium due to this size.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset

 
\end_layout

\begin_layout Subsubsection
Data dictonaries
\end_layout

\begin_layout Standard
Below are the data dictonaries for my proposed system
\end_layout

\begin_layout Standard
Login database
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field purpose
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example Data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Validation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Username
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the users alias
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
String
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
FloatingGhost
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Password
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To enable secure login
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
String/Hashed
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
640ab2bae07bedc
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
XP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the user's progress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tanks
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the user's unlocked tanks
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
String
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PanzerIV,Maus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wins
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the users number of wins
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Server variables
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field purpose
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example Data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Validation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To determine which client is connected
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x_pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the clients x position
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[7.7,7.7]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y_pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the clients y positions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[7.7,7.7]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the clients angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[77,77]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
turret_angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To store the clients turret angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[77,77]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Not null
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Client variables
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field purpose
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Field Type
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Example Data
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Validation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Id
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To tell the server who you are
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Int
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x_pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To draw every player on the screen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[7.7,7.7]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y_pos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To draw every player on the screen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[7,7,7.7]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To draw every player on the screen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[77,77]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
turret_angles
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To draw every player on the screen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
List of floats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[77,77]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
networkComms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
To communicate with the server
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Custom class
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
((
\begin_inset Quotes eld
\end_inset

localhost
\begin_inset Quotes erd
\end_inset

,9999))
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
None
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Database design
\end_layout

\begin_layout Standard
Main database design
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename DatabaseAnaly.pdf

\end_inset


\end_layout

\begin_layout Standard
User(
\bar under
UserID
\bar default
, username, hashedPassword, panzerIVProgress, churchillProgress, ...
 , [Tank]Progress, xp)
\end_layout

\begin_layout Standard
Tank(
\bar under
TankID
\bar default
, name, speed, hp, traverseSpeed, turretTraverseSpeed, damage, rateOfFire,
 armour, penetration)
\end_layout

\begin_layout Subsubsection
Proposed objects
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename SpriteInheritence.pdf

\end_inset


\end_layout

\begin_layout Subsubsection
Data Sources and Destinations
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Destinations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Player send client information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Server stored updates client information
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Server send all player information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Player updates the network players, output in form of drawing players on
 the screen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tank Database gives the tank stats
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client takes it's stats to correctly update it's own information, no output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Player gives input to the client
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Outputted to the server in the form of updates client information
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Constraints
\end_layout

\begin_layout Subsubsection
Hardware
\end_layout

\begin_layout Standard
This is the main constraint of my proposed system as the problem I am solving
 is due to low-powered hardware.
 My solution will have to run on low-end integrated graphics systems at
 >30 FPS to fit with the client's request as expressed in the interview.
 It must also be able to host the server on both WiFi and Ethernet LAN to
 cover every possible machine.
\end_layout

\begin_layout Standard
Another possible hardware constraint is network interfaces - as the game
 will run over a network, it will need low latency to give a pleasant experience.
 Low-speed network interfaces are an issue due to the time taken for the
 client to send and recieve requests and responses respectivelty from the
 server.
\end_layout

\begin_layout Subsubsection
Software
\end_layout

\begin_layout Standard
My proposed system is to be cross-platform, so it must use a programming
 language that is also cross-platform as well as any external libraries.
 
\end_layout

\begin_layout Subsubsection
Time
\end_layout

\begin_layout Standard
The project must be finished by the deadline, easter 2014.
\end_layout

\begin_layout Subsubsection
User's Knowledge Of Information Technology
\end_layout

\begin_layout Standard
As my user group mainly plays games online, they are familliar with how
 to use a program.
 But to ensure that everyone on all systems can use my solution, I will
 keep the program as jargon-free as possible and as simplistic as I can
 make it.
\end_layout

\begin_layout Subsubsection
Who will be allowed to use the system?
\end_layout

\begin_layout Standard
The client can be used by anyone, whilst the running server can only be
 accessed by the owner of the PC running it.
 User accounts can only be accessed by their respective owners, so there
 will have to be some way to log in to ensure security.
\end_layout

\begin_layout Subsection
Objectives
\end_layout

\begin_layout Subsubsection
General Objectives
\end_layout

\begin_layout Standard
My client's overall objective is to create a fun, multiplayer armoured warfare
 game that has depth and end-game content.
 My client wants it to run on any system, regardless of computer specification,
 whilst making the game to the users satisfaction.
\end_layout

\begin_layout Subsubsection
Specific Objectives
\end_layout

\begin_layout Enumerate
By deadline day, my game client must be able to communicate across the network
 with low latency.
\end_layout

\begin_layout Enumerate
By deadline day, it must also be able to run on a low-power PC at more than
 30 Frames Per Second.
\end_layout

\begin_layout Enumerate
By deadline day, it must also have user accounts with progression.
\end_layout

\begin_layout Enumerate
By deadline day, it must also support up to 8 players.
\end_layout

\begin_layout Enumerate
By deadline day, it must also be supported on Windows and Linux with less
 than a 5 minute installation time.
\end_layout

\begin_layout Subsection
Consideration of Alternative Solutions
\end_layout

\begin_layout Itemize
I could use an alternative language such as Java as it is in common use,
 installed on almost all PCs and is cross platform.
 This would fit my specification as the language is compiled, making it
 run more effectively on low-end computers.
 I am also familliar with the language and how to create games in it, although
 networking is one of the hardest features of Java.
\end_layout

\begin_layout Itemize
I could use a WYSIWYG game creator such as gamemaker as it is simple to
 use and speeds up production significantly.
 It is also easy to learn and has networking extensions to allow for ease
 of creation.
 
\end_layout

\begin_layout Subsection
Justification of Chosen Solution
\end_layout

\begin_layout Standard
I have chosen to use Python with PyGame for the client and pure Python for
 the server, whilst using wxPython for the GUI forms, such as the server
 configuration form.
 This is due to my knowledge of the language and the ease of networks with
 inbuilt modules.
 PyGame also makes game design more intuitive and efficient, making it able
 to run on most any PC.
 wxPython is a cross-platform GUI toolkit that includes a WYSIWYG designer
 and python modules, making the creation of GUI forms simpler.
\end_layout

\begin_layout Section
Design
\end_layout

\begin_layout Standard
In this section I shall outline my proposed system and its components, and
 explain how I shall implement each part of the solution.
\end_layout

\begin_layout Standard
I shall start with an overall system overview, then go into more depth on
 the different parts of the system.
\end_layout

\begin_layout Subsection
Overall System Design
\end_layout

\begin_layout Standard
Client Side
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ClientFlow - MainClient.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Server Side
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ClientFlow - ServerSide.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Login Server
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ClientFlow - Login.pdf

\end_inset


\end_layout

\begin_layout Subsection
Description of Modular Structure of System
\end_layout

\begin_layout Standard
Top-down design for the system
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ModularDesign.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
IPSO Table for the proposed system, server-side:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inputs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Processes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Username
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sign in player
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Password
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Search for player in database
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Tank Choice
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Process the client request
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
X position
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate bullet trajectories
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Y position
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate if the bullet penetrates
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hull angle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate the HP of hit tanks
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Turret angle
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update all connected players
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bullet creation
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Update bullet position
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client Request
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Calculate angle of bullet impact
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client connection
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Outputs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Stores
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client positions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client information
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bullet positions
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bullet information
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client HP
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User information (stats)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client XP and progress
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Network response
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Local server information
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definition of data requirements
\end_layout

\begin_layout Standard
A table of a database is used to store the details of the users.
 It uses this structure:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
UserID: Integer
\end_layout

\begin_layout Standard
Username: String[20]
\end_layout

\begin_layout Standard
HashedPassword: String[100]
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Another table is used to store the user progress on every tank, with the
 following structure:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
UserID: Integer
\end_layout

\begin_layout Standard
PanzerIVProgress: String[30]
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
.
\end_layout

\begin_layout Standard
ChurchillProgress: String[30]
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The various tanks are stored in a third table with this structure:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
TankID: Integer
\end_layout

\begin_layout Standard
Name: String[10]
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The stats for these tanks are stored in a final table with structure:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
TankID: Integer
\end_layout

\begin_layout Standard
speed: Float
\end_layout

\begin_layout Standard
hp: Integer
\end_layout

\begin_layout Standard
traverseSpeed: Float
\end_layout

\begin_layout Standard
turretTraverseSpeed: Float
\end_layout

\begin_layout Standard
damage: Integer
\end_layout

\begin_layout Standard
reload: Integer
\end_layout

\begin_layout Standard
armour: Integer
\end_layout

\begin_layout Standard
penetration: Integer
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The user tables will hold approximately 200 records based on the current
 user base of Slick Muffin, my client, and the tank tables will hold around
 20 records.
\end_layout

\begin_layout Subsection
Database Design
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename DatabaseDiag.pdf

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
UserAccounts(
\bar under
UserID
\bar default
, Username, HashedPassword)
\end_layout

\begin_layout Standard
UserProgress(
\bar under
UserID
\bar default
, PanzerIVProgress, ChurchillProgress, (etc) [Tank]Progress)
\end_layout

\begin_layout Standard
Tanks(
\bar under
TankID
\bar default
, Name)
\end_layout

\begin_layout Standard
TankStats(
\bar under
TankID
\bar default
, speed, hp, traverseSpeed, turretTraverseSpeed, damage, reload, armour,
 penetration)
\end_layout

\begin_layout Subsection
Storage
\end_layout

\begin_layout Subsubsection
File Organisation and Processing
\end_layout

\begin_layout Standard
From my data dictionary, my database will likely require less than 5 MiB
 of storage space based on 200 users, although this could scale if the game
 is more popular than expected.
 As such I shall estimate the absolute maximum size to be 10 MiB.
 The game resources (pictures, sound etc.) will take up quite a bit more
 room.
 Going on 20 tanks, I predict the total resources size to be approximately
 30-50 MiB dependant on the quality of sound used.
\end_layout

\begin_layout Standard
An estimate for the final program file size would be around 60 MiB for absolutel
y everything.
\end_layout

\begin_layout Subsubsection
Identification of Storage Media
\end_layout

\begin_layout Standard
My files will be stored on a hard drive, with data written and read in the
 working directory to avoid permission complications with Windows.
 I will use a complete backup on the server side, every day the server is
 online it will be copied to make a new file in the users home directory.
\end_layout

\begin_layout Subsection
Identification of suitable algorithms
\end_layout

\begin_layout Standard
A large part of my game revolves around armour penetration mechanics, I.E
 if the bullet damages the vehicle or not.
 This is largely dependant on the bullet's angle of impact to the surface
 of the tank.
\end_layout

\begin_layout Definition
Henceforth, 
\series bold
A.B 
\series default
shall be used to denote the dot product of vectors a A and B, where the
 dot product is defined as
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
A.B\:=A_{1}B_{1}+A_{2}B_{2}\:=|A||B|cos\theta
\]

\end_inset


\end_layout

\begin_layout Definition
Where 
\begin_inset Formula $\theta$
\end_inset

 is the angle between the 2 vectors, and |A| is the modulus or length of
 the vector given by:
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
|A|\:=\sqrt{A_{1}^{2}+A_{2}^{2}}
\]

\end_inset


\end_layout

\begin_layout Definition
Hence:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

DotProduct:
\end_layout

\begin_layout Plain Layout

	VecA <- Input VectorA
\end_layout

\begin_layout Plain Layout

	VecB <- Input VectorB
\end_layout

\begin_layout Plain Layout

	xComponent <- VecA.x * VecB.x
\end_layout

\begin_layout Plain Layout

	yComponent <- VecA.y * VecB.y
\end_layout

\begin_layout Plain Layout

	output xComponent + yComponent
\end_layout

\end_inset


\end_layout

\begin_layout Definition
Suppose we have a tank at angle 
\begin_inset Formula $\alpha_{2}$
\end_inset

 and the velocity vector of the bullet hitting it, with the angle of the
 velocity vector 
\begin_inset Formula $\alpha_{1}$
\end_inset

, I.E:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Graphics
	filename Collision.pdf

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Formula $n$
\end_inset

 is the normal to the surface of impact, and it's angle is dependant on
 the bullet's location.
 
\end_layout

\begin_layout Definition
\begin_inset Graphics
	filename Angular.pdf

\end_inset


\end_layout

\begin_layout Definition
Consider the above diagram, from it we can create an algorithm that will
 return the angle of the normal to the surface.
 From the diagram, it is shown that the angle from the line PQ and the line
 running perpendicular through the tank is 
\begin_inset Formula $180-\theta+\alpha$
\end_inset

 where 
\begin_inset Formula $\theta$
\end_inset

 is the angle of the bullet from the positive x-axis and 
\begin_inset Formula $\alpha$
\end_inset

 is the angle of the tank from the same axis.
\end_layout

\begin_layout Definition
From this we want to find what angle the normal is in reference to the bullet,
 as if it hits the top surface it is at a different angle to if it hits
 the side.
\end_layout

\begin_layout Definition
This angle will differ based on the size of the tank's hit box, so henceforth
 I will use 
\begin_inset Formula $TW$
\end_inset

 to denote tank width and 
\begin_inset Formula $TH$
\end_inset

 to represent tank height, with the horizontal on the above diagram running
 through the 
\begin_inset Formula $TW$
\end_inset

 side.
\end_layout

\begin_layout Definition
We will need to find where the corners of the tank are in order to have
 any reference to the bullet, 
\begin_inset Formula $a$
\end_inset

 will be used below to denote the angle the tank is facing.
\end_layout

\begin_layout Itemize
Corner Z is given by 
\begin_inset Formula $\arctan[(TW/2)/(TH/2)]$
\end_inset

+
\begin_inset Formula $a$
\end_inset


\end_layout

\begin_layout Itemize
Corner Y is given by 
\begin_inset Formula $\arctan[(TH/2)/(TW/2)]$
\end_inset

 +
\begin_inset Formula $a$
\end_inset


\end_layout

\begin_layout Itemize
Corner X is equal to the angle to corner Z + 180
\end_layout

\begin_layout Itemize
Corner W is equal to the angle to corner Y + 180
\end_layout

\begin_layout Standard
So, finally, the angle of the normal is this:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

Normal:
\end_layout

\begin_layout Plain Layout

	angleOfTank <- Input Tank.Angle
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	angleOfBullet <- Input Bullet.Angle
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	angleBetween <- 180 - angleOfBullet + angleOfTank
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	toCornerZ <- arctan[(TW/2) / (TH/2)]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	toCornerY <- arctan[(TH/2) / (TW/2)]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	if angleBetween < toCornerZ
\end_layout

\begin_layout Plain Layout

		output angleOfTank
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	else if angleBetween < toCornerY
\end_layout

\begin_layout Plain Layout

		output 90 + angleOfTank
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	else if angleBetween < toCornerZ + 180
\end_layout

\begin_layout Plain Layout

		output 180+ angleOfTank
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	else
\end_layout

\begin_layout Plain Layout

		output 270 + angleOfTank
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Definition
So if we consider finding the general angle of impact, taking into account
 the angle of the normal, we can use the following algorithm:
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash

\backslash

\end_layout

\end_inset


\end_layout

\begin_layout Definition
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

AngleOfImpact:
\end_layout

\begin_layout Plain Layout

	Bullet <- Input bullet
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	BulletXComp <- Bullet.Velocity * cos(Bullet.angle)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	BulletYComp <- Bullet.Velocity * sin(Bullet.angle)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	BulletVector <- Bullet.Velocity * Bullet.angle
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	NormalLine <- Normal(Input Tank)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	NormalLength <- 2
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	NormalXComp <- NormalLength * cos(NormalLine)
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	NormalYComp <- NormalLength * sin(NormalLine)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	Dot <- DotProduct(BulletVector, NormalLine)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	ModA <- sqrt[(BulletXComp^2) + BulletYComp^2)]
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	ModB <- sqrt[(NormalXComp^2) + (NormalYComp^2)]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	CosTheta <- Dot / (ModA * ModB)
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	Output arccos(90 - CosTheta)
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class definitions
\end_layout

\begin_layout Standard
I probably need these.
 What exactly are they? 
\end_layout

\begin_layout Subsection
User Interface Rationale
\end_layout

\begin_layout Standard
For my GUI, I shall be using as simplistic a graphics scheme as possible
 as the client wants the program to run on very low-powered computers and
 a complex GUI could possibly not run as well as intended.
 As such, I shall be using the default graphics scheme of the wx toolkit
 as it is the best optimised.
 I shall use a sans-serif font that can be rendered on all operating systems,
 the font will be Open Sans due to its clarity on smaller displays.
\end_layout

\begin_layout Standard
For multiple choice options I shall use drop-down lists as they save space,
 allowing for more to be on one form.
\end_layout

\begin_layout Standard
The main game shall be in 1024x768 resolution, it is universally supported
 which the client has said is a requirement.
 The other forms shall be no larger then 600x400 to avoid lack of screen
 space if multiple forms need to be displayed at once.
\end_layout

\begin_layout Subsection
UI Sample of Planned Data Capture and Entry Designs 
\end_layout

\begin_layout Standard
The main tank selection window:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename GUIdesign.pdf
	scale 80

\end_inset


\end_layout

\begin_layout Subsection
Description of measures planned for security and integrity of data 
\end_layout

\begin_layout Standard
As this project is network-based, the majority of the errors come from the
 connection between client and server.
 As such user input much be validated to ensure the network connections
 can be carried out without error, and the 
\begin_inset Quotes eld
\end_inset

Server join
\begin_inset Quotes erd
\end_inset

 box will run a check on the input to make sure that there is a server address
 and that this address is reachable.
\end_layout

\begin_layout Standard
Error messages resulting from the connection will look like this:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename HostError.pdf

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ClientError.pdf

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename QuitError.pdf

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename InputError.pdf

\end_inset


\end_layout

\begin_layout Standard
All of these errors are not recoverable directly by the program and will
 put the user back at the main GUI for either the server or the client for
 reconnection or the erronious data to be modified, in the case of the HOST:PORT
 error.
\end_layout

\begin_layout Subsection
Description of measures planned for systems security 
\end_layout

\begin_layout Standard
The client has specified that they would like user accounts, and as such
 these must be secure to avoid tampering.
 The user database will be stored on a central server with passwords hashed
 using SHA-1 which is inaccessable to anyone except for the owner of the
 login server, the client.
 This ensures security of user data and progress whilst providing a central
 data storage location for the program to use.
\end_layout

\begin_layout Standard
Security of client-hacking is carried out through mainly server-side calculation
s, meaning that any modification of local code will not affect the game
 experience for anyone else.
\end_layout

\begin_layout Subsection
Overall Test Strategy
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Series
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Purpose of Test Series
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Population of the GUI - client data and network interfaces.
 (System Testing)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Network connection, do the client and server connect and stay connected?
 (Integration testing)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Database information transfer, does the client recieve the correct information?
 (System Testing)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Physics of bullets - do armour penetration calculations work? (White box
 testing) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Client draws the game correctly - do the graphics appear the same on all
 clients? (System testing)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
System Maintainance Document
\end_layout

\begin_layout Standard
In this section I will overview how my system works, first generally, then
 per-algorithm.
\end_layout

\begin_layout Subsection
System Overview
\end_layout

\begin_layout Standard
Armoured Warfare Simulator 2014 is an online multiplayer game that takes
 simple shooting mechanics and turns them into a strategic game of angles.
 It is run over a peer-to-peer network with anyone able to host a server
 and start playing with their accounts which are handled on a unified login
 server, keeping track of progress on each account.
\end_layout

\begin_layout Standard
I have designed the system to only have trivial tasks for the end-user,
 as this allows anyone to use the system.
 The only non-trivial task in my program is the 
\begin_inset Quotes eld
\end_inset

updateAllSettings.py
\begin_inset Quotes erd
\end_inset

 script for moving login server location.
 The client/server settings can be updated by entering the new login server
 IP address (string) and the port (integer) into the terminal.
 
\end_layout

\begin_layout Standard
The data in my system is stored in a sqlite3 database - the 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-1"

\end_inset

NPD Group study into PC Usage: URL: https://www.npd.com/wps/portal/npd/us/news/pre
ss-releases/the-npd-group-report-shows-increased-number-of-online-gamers-and-hou
rs-spent-gaming/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "key-2"

\end_inset

Slick Muffin Studios URL: http://slickmuffin.weebly.com/
\end_layout

\end_body
\end_document
